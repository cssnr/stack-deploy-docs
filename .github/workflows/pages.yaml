name: "Pages"

on:
  workflow_dispatch:
  #push:
  #  branches:
  #    - "master"
  #  paths:
  #    - "docs/**"
  #    - ".vitepress/**"
  #    - "package.json"
  #    - ".github/workflows/pages.yaml"

env:
  CRAWLER_ID: "7a46f2b7-7169-4936-986d-21391c3134d4"

permissions:
  contents: read

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "Setup Node 24"
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - name: "Configure Pages"
        uses: actions/configure-pages@v5

      - name: "Install Dependencies"
        run: |
          npm ci

      - name: "Run Build"
        run: |
          npm run build

      - name: "Upload Pages Artifact"
        uses: actions/upload-pages-artifact@v4
        with:
          path: .vitepress/dist

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: "Deploy Pages"
        id: deployment
        uses: actions/deploy-pages@v4

      - name: "Send Deploy Notification"
        if: ${{ !cancelled() }}
        continue-on-error: true
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  post:
    name: "Post-Deploy"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: deploy

    steps:
      - name: "Algolia Crawler"
        if: ${{ env.CRAWLER_ID != '' }}
        uses: cssnr/algolia-crawler-action@v1
        with:
          crawler_id: ${{ env.CRAWLER_ID }}
          crawler_user_id: ${{ secrets.CRAWLER_USER_ID }}
          crawler_api_key: ${{ secrets.CRAWLER_API_KEY }}

      - name: "Send Post-Deploy Notification"
        if: ${{ failure() }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
