name: "Docker Stack Deploy"

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Tags: comma,separated"
        required: true
        default: "latest"

env:
  REGISTRY: "ghcr.io"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
  name: "Build"
  runs-on: ubuntu-latest
  timeout-minutes: 15
  permissions:
    packages: write

  steps:
    - name: "Checkout"
      uses: actions/checkout@v4

    - name: "Setup Buildx"
      uses: docker/setup-buildx-action@v2
      with:
        platforms: "linux/amd64,linux/arm64"

    - name: "Docker Login"
      uses: docker/login-action@v3
      with:
        registry: $${{ env.REGISTRY }}
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_PASS }}

    - name: "Generate Tags"
      id: tags
      uses: cssnr/docker-tags-action@v1
      with:
        images: $${{ env.REGISTRY }}/${{ github.repository }}
        tags: ${{ inputs.tags }}

    - name: "Build and Push"
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: "linux/amd64,linux/arm64"
        push: true
        tags: ${{ steps.tags.outputs.tags }}
        labels: ${{ steps.tags.outputs.labels }}

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Stack Deploy"
        uses: cssnr/stack-deploy-action@v1
        with:
          name: "stack-name"
          file: "docker-compose.yaml"
          host: ${{ secrets.DOCKER_HOST }}
          user: ${{ secrets.DOCKER_USER }}
          port: 22 # 22 is default, you can remove or change this
          pass: ${{ secrets.DOCKER_PASS }} # not needed with ssh_key
          ssh_key: ${{ secrets.DOCKER_SSH_KEY }} # not needed with pass

  cleanup:
    name: "Cleanup"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: deploy
    permissions:
      contents: read
      packages: write

    steps:
      - name: "Purge Cache"
        uses: cssnr/cloudflare-purge-cache-action@v2
        with:
          token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          zones: cssnr.com
